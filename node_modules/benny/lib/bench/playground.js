"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const platform = require("platform");
const bench_1 = require("./bench");
const format = (num) => {
    const [whole, fraction] = String(num).split('.');
    const chunked = [];
    whole
        .split('')
        .reverse()
        .forEach((char, index) => {
        if (index % 3 === 0) {
            chunked.unshift([char]);
        }
        else {
            chunked[0].unshift(char);
        }
    });
    return (chunked.map((chunk) => chunk.join('')).join(' ') +
        (fraction ? `.${fraction}` : ''));
};
const display = ({ name, stats, time }) => {
    console.log(`Custom - ${name}:`);
    console.log(`${format(Number(stats.ops.toFixed(2)))} ops/s Â±${stats.margin.toFixed(2)}% (${format(stats.n)} samples in ${time.toFixed(2)}s)\n`);
};
const main = async () => {
    const data = new Array(1e3).fill(null).map((_, i) => i);
    const options = {
        minSamples: 1000,
        minTime: 5,
        maxTime: 30,
        maxMargin: 1,
    };
    console.log(`Platform: ${platform.description}\n`);
    await (0, bench_1.default)('empty', () => { }, options).then(display);
    await (0, bench_1.default)('sum', () => {
        1 + 1;
    }, options).then(display);
    await (0, bench_1.default)('sum 2 elements', () => {
        ;
        [1, 2].reduce((a, b) => a + b);
    }, options).then(display);
    await (0, bench_1.default)('sum 5 elements', () => {
        ;
        [1, 2, 3, 4, 5].reduce((a, b) => a + b);
    }, options).then(display);
    await (0, bench_1.default)(`sum ${data.length} elements`, () => {
        data.reduce((a, b) => a + b);
    }, options).then(display);
};
main();
