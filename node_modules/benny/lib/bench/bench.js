"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const runningStats_1 = require("./stats/runningStats");
const timer_1 = require("./tools/timer");
const noop_1 = require("./tools/noop");
const isNode_1 = require("./tools/isNode");
const MIN_USEFUL_SAMPLES = 2;
const defaultOptions = {
    minSamples: 1000,
    minTime: 5,
    maxTime: 30,
    maxMargin: 1,
};
const bench = async (name, test, options = {}) => {
    const rs = (0, runningStats_1.default)();
    const opt = { ...defaultOptions, ...options };
    let stats = { n: 0, mean: 0, margin: Infinity };
    let benchTime = 0;
    timer_1.default.init();
    while (true) {
        benchTime = timer_1.default.since();
        if ((benchTime > opt.maxTime ||
            (benchTime > opt.minTime &&
                stats.n >= opt.minSamples &&
                stats.margin < opt.maxMargin &&
                stats.n >= MIN_USEFUL_SAMPLES)) &&
            stats.n >= MIN_USEFUL_SAMPLES) {
            break;
        }
        const time = timer_1.default.measure(test);
        stats = rs(Number(time));
    }
    console.log({ mean: stats.mean, res: timer_1.default.resolution });
    if (stats.mean <= noop_1.default.boundary) {
        stats.mean = 0;
        stats.margin = Infinity;
    }
    const ops = isNode_1.default ? 1000000000 / stats.mean : 1000 / stats.mean;
    return {
        name,
        stats: { ...stats, ops },
        time: benchTime,
    };
};
exports.default = bench;
