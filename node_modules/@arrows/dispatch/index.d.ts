import getType from './getType';
import identity from './identity';
import is from './is';
import isIn from './isIn';
import types from './types';
export { getType, identity, is, isIn, types };
declare const _default: {
    getType: (value: any) => string;
    identity: <T>(x: T) => T;
    is: ((prototype: import("./internal/common-types").Class, value: any) => boolean) & ((prototype: import("./internal/common-types").Class) => (value: any) => boolean);
    isIn: ((list: any[] | Set<any>, value: any) => boolean) & ((list: any[] | Set<any>) => (value: any) => boolean);
    types: {
        Array: string;
        BigInt: string;
        Boolean: string;
        Error: string;
        Function: string;
        Generator: string;
        GeneratorFunction: string;
        Null: string;
        Number: string;
        Object: string;
        Promise: string;
        RegExp: string;
        String: string;
        Symbol: string;
        Undefined: string;
    };
};
export default _default;
