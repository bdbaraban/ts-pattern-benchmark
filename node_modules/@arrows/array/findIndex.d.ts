declare type TestFn<T> = (element: T, index: number, arr: T[]) => boolean;
declare type _FindIndex = <T>(testFn: TestFn<T>, arr: T[]) => number;
declare type _FindIndex2 = <T>(testFn: TestFn<T>) => (arr: T[]) => number;
declare type FindIndex = _FindIndex & _FindIndex2;
/**
 * Functional wrapper for Array.prototype.findIndex
 *
 * Retrieves the index of the first element in the array
 * where predicate is true, and -1 otherwise.
 *
 * @param testFn Test function
 * @param arr Initial array
 * @returns Index of the matching element or -1
 */
declare const findIndex: FindIndex;
export { findIndex };
export default findIndex;
