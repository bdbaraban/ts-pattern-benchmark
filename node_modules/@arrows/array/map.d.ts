declare type MappingFn<V> = (currentValue?: V, index?: number, array?: V[]) => unknown;
declare type _Map = <T>(mappingFn: MappingFn<T>, arr: T[]) => unknown[];
declare type _Map2 = <T>(mappingFn: MappingFn<T>) => (arr: T[]) => unknown[];
declare type Map = _Map & _Map2;
/**
 * Functional wrapper for Array.prototype.map
 *
 * Calls a defined mapping function on each element of an array,
 * and returns an array that contains the results.
 *
 * @param mappingFn Mapping function
 * @param arr Initial array
 * @return New array
 */
declare const map: Map;
export { map };
export default map;
